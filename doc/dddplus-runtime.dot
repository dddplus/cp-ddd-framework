digraph G {
   labelloc = "t";
   rankdir=LR;
   splines = polyline;
   node [shape=Mrecord];
   nodesep=0.2;
   edge [style = dashed, arrowsize=0.4, fontsize=6];

   "DomainService" [label="<DomainService> DomainService|<domain> domain"
];
   "Extension" [label="<Extension> Extension|<code> code|<name> name"
];
   "Partner" [label="<Partner> Partner|<code> code|<name> name"
];
   "Pattern" [label="<Pattern> Pattern|<asResolver> asResolver|<code> code|<name> name|<priority> priority"
];
   "Router" [label="<Router> Router|<domain> domain|<name> name"
];
   "IIdentityResolver" [label="<IIdentityResolver> IIdentityResolver|<match> match"
];
   "IPolicy" [label="<IPolicy> IPolicy|<extensionCode> extensionCode"
];
   "BaseRouter" [label="<BaseRouter> BaseRouter|<findExtension> findExtension|<firstExtension> firstExtension|<forEachExtension> forEachExtension"
];
   "DDD" [label="<DDD> DDD|<findSteps> findSteps|<firstExtension> firstExtension|<usePolicy> usePolicy|<useRouter> useRouter"
];
   "ExtensionInvocationHandler" [label="<ExtensionInvocationHandler> ExtensionInvocationHandler|<createProxy> createProxy|<invoke> invoke|<invokeExtension> invokeExtension"
];
   "IReducer" [label="<IReducer> IReducer|<allOf> allOf|<reduce> reduce|<shouldStop> shouldStop"
];
   "IStartupListener" [label="<IStartupListener> IStartupListener|<onStartComplete> onStartComplete"
];
   "IExtensionInterceptor" [label="<IExtensionInterceptor> IExtensionInterceptor|<afterInvocation> afterInvocation|<beforeInvocation> beforeInvocation"
];
   "DDDBootstrap" [label="<DDDBootstrap> DDDBootstrap|<onApplicationEvent> onApplicationEvent|<setApplicationContext> setApplicationContext"
];
   "DomainArtifacts" [label="<DomainArtifacts> DomainArtifacts|<export> export"
];
   "DomainServiceDef" [label="<DomainServiceDef> DomainServiceDef|<registerBean> registerBean"
];
   "ExtensionDef" [label="<ExtensionDef> ExtensionDef|<initialize> initialize|<prepare> prepare|<registerBean> registerBean"
];
   "IPrepareAware" [label="<IPrepareAware> IPrepareAware|<prepare> prepare"
];
   "IRegistryAware" [label="<IRegistryAware> IRegistryAware|<registerBean> registerBean"
];
   "InternalIndexer" [label="<InternalIndexer> InternalIndexer|<commitPartner> commitPartner|<extClazzOfPolicy> extClazzOfPolicy|<findDomainSteps> findDomainSteps|<findEffectiveExtensions> findEffectiveExtensions|<findRouter> findRouter|<getBaseRouterExtDeclaration> getBaseRouterExtDeclaration|<index> index|<postIndexing> postIndexing|<prepare> prepare|<registeredInterceptor> registeredInterceptor"
];
   "PartnerDef" [label="<PartnerDef> PartnerDef|<getExtension> getExtension|<initialize> initialize|<match> match|<prepare> prepare|<registerBean> registerBean|<registerExtensionDef> registerExtensionDef"
];
   "PatternDef" [label="<PatternDef> PatternDef|<extClazzSet> extClazzSet|<getExtension> getExtension|<initialize> initialize|<match> match|<registerBean> registerBean|<registerExtensionDef> registerExtensionDef"
];
   "PolicyDef" [label="<PolicyDef> PolicyDef|<getExtension> getExtension|<policyName> policyName|<registerBean> registerBean|<registerExtensionDef> registerExtensionDef"
];
   "RegistryFactory" [label="<RegistryFactory> RegistryFactory|<preparePlugins> preparePlugins|<register> register"
];
   "RouterDef" [label="<RouterDef> RouterDef|<registerBean> registerBean"
];

   BaseRouter:findExtension -> InternalIndexer:registeredInterceptor
   BaseRouter:findExtension -> ExtensionInvocationHandler:createProxy
   BaseRouter:firstExtension -> InternalIndexer:getBaseRouterExtDeclaration
   BaseRouter:forEachExtension -> IReducer:allOf
   DDD:findSteps -> InternalIndexer:findDomainSteps
   DDD:firstExtension -> InternalIndexer:registeredInterceptor
   DDD:firstExtension -> ExtensionInvocationHandler:createProxy
   DDD:usePolicy -> InternalIndexer:extClazzOfPolicy
   DDD:useRouter -> InternalIndexer:findRouter
   ExtensionInvocationHandler:invoke -> InternalIndexer:findEffectiveExtensions
   ExtensionInvocationHandler:invoke -> IReducer:shouldStop
   ExtensionInvocationHandler:invoke -> IReducer:reduce
   ExtensionInvocationHandler:invokeExtension -> IExtensionInterceptor:beforeInvocation
   ExtensionInvocationHandler:invokeExtension -> IExtensionInterceptor:afterInvocation
   DDDBootstrap:onApplicationEvent -> IStartupListener:onStartComplete
   DDDBootstrap:setApplicationContext -> RegistryFactory:register
   DomainArtifacts:export -> PartnerDef:getExtension
   DomainServiceDef:registerBean -> DomainService:domain
   DomainServiceDef:registerBean -> InternalIndexer:index
   ExtensionDef:initialize -> Extension:code
   ExtensionDef:initialize -> Extension:name
   ExtensionDef:prepare -> InternalIndexer:prepare
   ExtensionDef:registerBean -> InternalIndexer:index
   InternalIndexer:commitPartner -> DomainArtifacts:export
   InternalIndexer:findEffectiveExtensions -> PolicyDef:getExtension
   InternalIndexer:findEffectiveExtensions -> PatternDef:match
   InternalIndexer:findEffectiveExtensions -> PatternDef:getExtension
   InternalIndexer:findEffectiveExtensions -> PartnerDef:getExtension
   InternalIndexer:findEffectiveExtensions -> PartnerDef:match
   InternalIndexer:index -> PolicyDef:registerExtensionDef
   InternalIndexer:index -> PatternDef:registerExtensionDef
   InternalIndexer:index -> PartnerDef:registerExtensionDef
   InternalIndexer:index -> PolicyDef:policyName
   InternalIndexer:postIndexing -> PatternDef:extClazzSet
   PartnerDef:initialize -> Partner:code
   PartnerDef:initialize -> Partner:name
   PartnerDef:match -> IIdentityResolver:match
   PartnerDef:prepare -> InternalIndexer:prepare
   PartnerDef:registerBean -> InternalIndexer:index
   PatternDef:initialize -> Pattern:code
   PatternDef:initialize -> Pattern:name
   PatternDef:initialize -> Pattern:priority
   PatternDef:initialize -> Pattern:asResolver
   PatternDef:match -> IIdentityResolver:match
   PatternDef:registerBean -> InternalIndexer:index
   PolicyDef:getExtension -> IPolicy:extensionCode
   PolicyDef:registerBean -> InternalIndexer:index
   RegistryFactory:preparePlugins -> IPrepareAware:prepare
   RegistryFactory:register -> IRegistryAware:registerBean
   RegistryFactory:register -> InternalIndexer:postIndexing
   RouterDef:registerBean -> Router:domain
   RouterDef:registerBean -> Router:name
   RouterDef:registerBean -> InternalIndexer:index
}